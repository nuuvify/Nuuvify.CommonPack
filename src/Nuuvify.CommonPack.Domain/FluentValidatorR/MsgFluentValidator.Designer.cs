//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nuuvify.CommonPack.Domain.FluentValidatorR {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MsgFluentValidator {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MsgFluentValidator() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nuuvify.CommonPack.Domain.FluentValidatorR.MsgFluentValidator", typeof(MsgFluentValidator).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} should be equals to {value}..
        /// </summary>
        public static string AssertAreEquals {
            get {
                return ResourceManager.GetString("AssertAreEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {name} should be equals to {value}..
        /// </summary>
        public static string AssertAreEqualsObject {
            get {
                return ResourceManager.GetString("AssertAreEqualsObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be contains {value}..
        /// </summary>
        public static string AssertContains {
            get {
                return ResourceManager.GetString("AssertContains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be contains a valid value from the list..
        /// </summary>
        public static string AssertContainsArray {
            get {
                return ResourceManager.GetString("AssertContainsArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List is null..
        /// </summary>
        public static string AssertContainsArrayNull {
            get {
                return ResourceManager.GetString("AssertContainsArrayNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} should not have a date..
        /// </summary>
        public static string AssertDateTimeNull {
            get {
                return ResourceManager.GetString("AssertDateTimeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must have exactly {length} characters..
        /// </summary>
        public static string AssertFixedLength {
            get {
                return ResourceManager.GetString("AssertFixedLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be at max {max} characters..
        /// </summary>
        public static string AssertHasMaxLength {
            get {
                return ResourceManager.GetString("AssertHasMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must have at least {min} characters..
        /// </summary>
        public static string AssertHasMinLength {
            get {
                return ResourceManager.GetString("AssertHasMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be between {a} and {b}..
        /// </summary>
        public static string AssertIsBetween {
            get {
                return ResourceManager.GetString("AssertIsBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be a valid E-mail address..
        /// </summary>
        public static string AssertIsEmail {
            get {
                return ResourceManager.GetString("AssertIsEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be greater or equal than {number}..
        /// </summary>
        public static string AssertIsGreaterOrEqualsThan {
            get {
                return ResourceManager.GetString("AssertIsGreaterOrEqualsThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be greater than {number}..
        /// </summary>
        public static string AssertIsGreaterThan {
            get {
                return ResourceManager.GetString("AssertIsGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be lower or equal than {number}..
        /// </summary>
        public static string AssertIsLowerOrEqualsThan {
            get {
                return ResourceManager.GetString("AssertIsLowerOrEqualsThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be lower than {number}..
        /// </summary>
        public static string AssertIsLowerThan {
            get {
                return ResourceManager.GetString("AssertIsLowerThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {name} must be null..
        /// </summary>
        public static string AssertIsNull {
            get {
                return ResourceManager.GetString("AssertIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be null or white..
        /// </summary>
        public static string AssertIsNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("AssertIsNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} is required..
        /// </summary>
        public static string AssertIsRequired {
            get {
                return ResourceManager.GetString("AssertIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be a valid Telephone number..
        /// </summary>
        public static string AssertIsTelephone {
            get {
                return ResourceManager.GetString("AssertIsTelephone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {field} should be true..
        /// </summary>
        public static string AssertIsTrue {
            get {
                return ResourceManager.GetString("AssertIsTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be a valid URL..
        /// </summary>
        public static string AssertIsUrl {
            get {
                return ResourceManager.GetString("AssertIsUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} not must be equals to {value}..
        /// </summary>
        public static string AssertNotAreEquals {
            get {
                return ResourceManager.GetString("AssertNotAreEquals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {name} not must be equals to {value}..
        /// </summary>
        public static string AssertNotAreEqualsObject {
            get {
                return ResourceManager.GetString("AssertNotAreEqualsObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must be a valid date..
        /// </summary>
        public static string AssertNotDateTimeNull {
            get {
                return ResourceManager.GetString("AssertNotDateTimeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object {name} should not be null..
        /// </summary>
        public static string AssertNotIsNull {
            get {
                return ResourceManager.GetString("AssertNotIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} should not be null or white..
        /// </summary>
        public static string AssertNotIsNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("AssertNotIsNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must have the expression {value}..
        /// </summary>
        public static string AssertRegexIsMatches {
            get {
                return ResourceManager.GetString("AssertRegexIsMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {name} must have an expression, not null..
        /// </summary>
        public static string AssertRegexIsMatches_Null {
            get {
                return ResourceManager.GetString("AssertRegexIsMatches_Null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selector: {selector} must not be null, so that it is possible to perform the verification..
        /// </summary>
        public static string SelectorNull {
            get {
                return ResourceManager.GetString("SelectorNull", resourceCulture);
            }
        }
    }
}
